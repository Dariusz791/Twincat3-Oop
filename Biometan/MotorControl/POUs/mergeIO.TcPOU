<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="mergeIO" Id="{24c17ea6-2604-43c2-bdfc-ac3ca7d44854}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM mergeIO
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
//Sygnały obiektów MccRev_* mieszadeł fermentora

//***************************************************SCADA********************************************************

//MccRev_001 variable sets by SCADA
FermentationProcess.fbMccRev_001.ScadaAutoButton     := MccRev_001.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_001.ScadaForwardButton  := MccRev_001.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_001.ScadaReverseButton  := MccRev_001.bReverseButton; // SCADA button Reverse Command

//MccRev_002 variable sets by SCADA
FermentationProcess.fbMccRev_002.ScadaAutoButton     := MccRev_002.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_002.ScadaForwardButton  := MccRev_002.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_002.ScadaReverseButton  := MccRev_002.bReverseButton; // SCADA button Reverse Command

//MccRev_003 variable sets by SCADA
FermentationProcess.fbMccRev_003.ScadaAutoButton     := MccRev_003.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_003.ScadaForwardButton  := MccRev_003.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_003.ScadaReverseButton  := MccRev_003.bReverseButton; // SCADA button Reverse Command

//MccRev_004 variable sets by SCADA
FermentationProcess.fbMccRev_004.ScadaAutoButton     := MccRev_004.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_004.ScadaForwardButton  := MccRev_004.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_004.ScadaReverseButton  := MccRev_004.bReverseButton; // SCADA button Reverse Command

//MccRev_005 variable sets by SCADA
FermentationProcess.fbMccRev_005.ScadaAutoButton     := MccRev_005.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_005.ScadaForwardButton  := MccRev_005.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_005.ScadaReverseButton  := MccRev_005.bReverseButton; // SCADA button Reverse Command

//MccRev_006 variable sets by SCADA
FermentationProcess.fbMccRev_006.ScadaAutoButton     := MccRev_006.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_006.ScadaForwardButton  := MccRev_006.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_006.ScadaReverseButton  := MccRev_006.bReverseButton; // SCADA button Reverse Command

//MccRev_007 variable sets by SCADA
FermentationProcess.fbMccRev_007.ScadaAutoButton     := MccRev_007.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_007.ScadaForwardButton  := MccRev_007.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_007.ScadaReverseButton  := MccRev_007.bReverseButton; // SCADA button Reverse Command

//MccRev_008 variable sets by SCADA
FermentationProcess.fbMccRev_008.ScadaAutoButton     := MccRev_008.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_008.ScadaForwardButton  := MccRev_008.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_008.ScadaReverseButton  := MccRev_008.bReverseButton; // SCADA button Reverse Command

//MccRev_009 variable sets by SCADA
FermentationProcess.fbMccRev_009.ScadaAutoButton     := MccRev_009.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_009.ScadaForwardButton  := MccRev_009.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_009.ScadaReverseButton  := MccRev_009.bReverseButton; // SCADA button Reverse Command

//MccRev_010 variable sets by SCADA
FermentationProcess.fbMccRev_010.ScadaAutoButton     := MccRev_010.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_010.ScadaForwardButton  := MccRev_010.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_010.ScadaReverseButton  := MccRev_010.bReverseButton; // SCADA button Reverse Command

//MccRev_011 variable sets by SCADA
FermentationProcess.fbMccRev_011.ScadaAutoButton     := MccRev_011.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_011.ScadaForwardButton  := MccRev_011.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_011.ScadaReverseButton  := MccRev_011.bReverseButton; // SCADA button Reverse Command

//MccRev_012 variable sets by SCADA
FermentationProcess.fbMccRev_012.ScadaAutoButton     := MccRev_012.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_012.ScadaForwardButton  := MccRev_012.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_012.ScadaReverseButton  := MccRev_012.bReverseButton; // SCADA button Reverse Command

//MccRev_013 variable sets by SCADA
FermentationProcess.fbMccRev_013.ScadaAutoButton     := MccRev_013.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_013.ScadaForwardButton  := MccRev_013.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_013.ScadaReverseButton  := MccRev_013.bReverseButton; // SCADA button Reverse Command

//MccRev_014 variable sets by SCADA
FermentationProcess.fbMccRev_014.ScadaAutoButton     := MccRev_014.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_014.ScadaForwardButton  := MccRev_014.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_014.ScadaReverseButton  := MccRev_014.bReverseButton; // SCADA button Reverse Command

//MccRev_015 variable sets by SCADA
FermentationProcess.fbMccRev_015.ScadaAutoButton     := MccRev_015.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_015.ScadaForwardButton  := MccRev_015.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_015.ScadaReverseButton  := MccRev_015.bReverseButton; // SCADA button Reverse Command

//MccRev_016 variable sets by SCADA
FermentationProcess.fbMccRev_016.ScadaAutoButton     := MccRev_016.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_016.ScadaForwardButton  := MccRev_016.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_016.ScadaReverseButton  := MccRev_016.bReverseButton; // SCADA button Reverse Command

//MccRev_017 variable sets by SCADA
FermentationProcess.fbMccRev_017.ScadaAutoButton     := MccRev_017.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_017.ScadaForwardButton  := MccRev_017.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_017.ScadaReverseButton  := MccRev_017.bReverseButton; // SCADA button Reverse Command

//MccRev_018 variable sets by SCADA
FermentationProcess.fbMccRev_018.ScadaAutoButton     := MccRev_018.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_018.ScadaForwardButton  := MccRev_018.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_018.ScadaReverseButton  := MccRev_018.bReverseButton; // SCADA button Reverse Command

//MccRev_019 variable sets by SCADA
FermentationProcess.fbMccRev_019.ScadaAutoButton     := MccRev_019.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_019.ScadaForwardButton  := MccRev_019.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_019.ScadaReverseButton  := MccRev_019.bReverseButton; // SCADA button Reverse Command

//MccRev_020 variable sets by SCADA
FermentationProcess.fbMccRev_020.ScadaAutoButton     := MccRev_020.bAutoButton;    // SCADA button Auto Command
FermentationProcess.fbMccRev_020.ScadaForwardButton  := MccRev_020.bForwardButton; // SCADA button Forward Command
FermentationProcess.fbMccRev_020.ScadaReverseButton  := MccRev_020.bReverseButton; // SCADA button Reverse Command


//***************************************************PLC********************************************************************


//MccRev_001 variable sets by PLC
MccRev_001.bTermFuse      := FermentationProcess.fbDriveReverse_001.MotorProtection;  // PLC input thermal fuse
MccRev_001.bContactor     := FermentationProcess.fbDriveReverse_001.MotorContactor;   // PLC output contactor
MccRev_001.udHours        := FermentationProcess.fbDriveReverse_001.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_001.uMinutes       := FermentationProcess.fbDriveReverse_001.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_001.uSeconds       := FermentationProcess.fbDriveReverse_001.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_001.sState         := FermentationProcess.fbDriveReverse_001.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_001.sStatus        := FermentationProcess.fbDriveReverse_001.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_002 variable sets by PLC
MccRev_002.bTermFuse      := FermentationProcess.fbDriveReverse_002.MotorProtection;  // PLC input thermal fuse
MccRev_002.bContactor     := FermentationProcess.fbDriveReverse_002.MotorContactor;   // PLC output contactor
MccRev_002.udHours        := FermentationProcess.fbDriveReverse_002.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_002.uMinutes       := FermentationProcess.fbDriveReverse_002.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_002.uSeconds       := FermentationProcess.fbDriveReverse_002.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_002.sState         := FermentationProcess.fbDriveReverse_002.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_002.sStatus        := FermentationProcess.fbDriveReverse_002.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register

//MccRev_003 variable sets by PLC
MccRev_003.bTermFuse      := FermentationProcess.fbDriveReverse_003.MotorProtection;  // PLC input thermal fuse
MccRev_003.bContactor     := FermentationProcess.fbDriveReverse_003.MotorContactor;   // PLC output contactor
MccRev_003.udHours        := FermentationProcess.fbDriveReverse_003.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_003.uMinutes       := FermentationProcess.fbDriveReverse_003.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_003.uSeconds       := FermentationProcess.fbDriveReverse_003.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_003.sState         := FermentationProcess.fbDriveReverse_003.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_003.sStatus        := FermentationProcess.fbDriveReverse_003.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register

//MccRev_004 variable sets by PLC
MccRev_004.bTermFuse      := FermentationProcess.fbDriveReverse_004.MotorProtection;  // PLC input thermal fuse
MccRev_004.bContactor     := FermentationProcess.fbDriveReverse_004.MotorContactor;   // PLC output contactor
MccRev_004.udHours        := FermentationProcess.fbDriveReverse_004.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_004.uMinutes       := FermentationProcess.fbDriveReverse_004.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_004.uSeconds       := FermentationProcess.fbDriveReverse_004.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_004.sState         := FermentationProcess.fbDriveReverse_004.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_004.sStatus        := FermentationProcess.fbDriveReverse_004.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_005 variable sets by PLC
MccRev_005.bTermFuse      := FermentationProcess.fbDriveReverse_005.MotorProtection;  // PLC input thermal fuse
MccRev_005.bContactor     := FermentationProcess.fbDriveReverse_005.MotorContactor;   // PLC output contactor
MccRev_005.udHours        := FermentationProcess.fbDriveReverse_005.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_005.uMinutes       := FermentationProcess.fbDriveReverse_005.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_005.uSeconds       := FermentationProcess.fbDriveReverse_005.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_005.sState         := FermentationProcess.fbDriveReverse_005.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_005.sStatus        := FermentationProcess.fbDriveReverse_005.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_006 variable sets by PLC
MccRev_006.bTermFuse      := FermentationProcess.fbDriveReverse_006.MotorProtection;  // PLC input thermal fuse
MccRev_006.bContactor     := FermentationProcess.fbDriveReverse_006.MotorContactor;   // PLC output contactor
MccRev_006.udHours        := FermentationProcess.fbDriveReverse_006.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_006.uMinutes       := FermentationProcess.fbDriveReverse_006.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_006.uSeconds       := FermentationProcess.fbDriveReverse_006.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_006.sState         := FermentationProcess.fbDriveReverse_006.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_006.sStatus        := FermentationProcess.fbDriveReverse_006.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register

//MccRev_007 variable sets by PLC
MccRev_007.bTermFuse      := FermentationProcess.fbDriveReverse_007.MotorProtection;  // PLC input thermal fuse
MccRev_007.bContactor     := FermentationProcess.fbDriveReverse_007.MotorContactor;   // PLC output contactor
MccRev_007.udHours        := FermentationProcess.fbDriveReverse_007.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_007.uMinutes       := FermentationProcess.fbDriveReverse_007.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_007.uSeconds       := FermentationProcess.fbDriveReverse_007.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_007.sState         := FermentationProcess.fbDriveReverse_007.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_007.sStatus        := FermentationProcess.fbDriveReverse_007.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register

//MccRev_008 variable sets by PLC
MccRev_008.bTermFuse      := FermentationProcess.fbDriveReverse_008.MotorProtection;  // PLC input thermal fuse
MccRev_008.bContactor     := FermentationProcess.fbDriveReverse_008.MotorContactor;   // PLC output contactor
MccRev_008.udHours        := FermentationProcess.fbDriveReverse_008.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_008.uMinutes       := FermentationProcess.fbDriveReverse_008.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_008.uSeconds       := FermentationProcess.fbDriveReverse_008.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_008.sState         := FermentationProcess.fbDriveReverse_008.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_008.sStatus        := FermentationProcess.fbDriveReverse_008.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_009 variable sets by PLC
MccRev_009.bTermFuse      := FermentationProcess.fbDriveReverse_009.MotorProtection;  // PLC input thermal fuse
MccRev_009.bContactor     := FermentationProcess.fbDriveReverse_009.MotorContactor;   // PLC output contactor
MccRev_009.udHours        := FermentationProcess.fbDriveReverse_009.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_009.uMinutes       := FermentationProcess.fbDriveReverse_009.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_009.uSeconds       := FermentationProcess.fbDriveReverse_009.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_009.sState         := FermentationProcess.fbDriveReverse_009.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_009.sStatus        := FermentationProcess.fbDriveReverse_009.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register

//MccRev_010 variable sets by PLC
MccRev_010.bTermFuse      := FermentationProcess.fbDriveReverse_010.MotorProtection;  // PLC input thermal fuse
MccRev_010.bContactor     := FermentationProcess.fbDriveReverse_010.MotorContactor;   // PLC output contactor
MccRev_010.udHours        := FermentationProcess.fbDriveReverse_010.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_010.uMinutes       := FermentationProcess.fbDriveReverse_010.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_010.uSeconds       := FermentationProcess.fbDriveReverse_010.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_010.sState         := FermentationProcess.fbDriveReverse_010.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_010.sStatus        := FermentationProcess.fbDriveReverse_010.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register

//MccRev_011 variable sets by PLC
MccRev_011.bTermFuse      := FermentationProcess.fbDriveReverse_011.MotorProtection;  // PLC input thermal fuse
MccRev_011.bContactor     := FermentationProcess.fbDriveReverse_011.MotorContactor;   // PLC output contactor
MccRev_011.udHours        := FermentationProcess.fbDriveReverse_011.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_011.uMinutes       := FermentationProcess.fbDriveReverse_011.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_011.uSeconds       := FermentationProcess.fbDriveReverse_011.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_011.sState         := FermentationProcess.fbDriveReverse_011.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_011.sStatus        := FermentationProcess.fbDriveReverse_011.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_012 variable sets by PLC
MccRev_012.bTermFuse      := FermentationProcess.fbDriveReverse_012.MotorProtection;  // PLC input thermal fuse
MccRev_012.bContactor     := FermentationProcess.fbDriveReverse_012.MotorContactor;   // PLC output contactor
MccRev_012.udHours        := FermentationProcess.fbDriveReverse_012.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_012.uMinutes       := FermentationProcess.fbDriveReverse_012.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_012.uSeconds       := FermentationProcess.fbDriveReverse_012.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_012.sState         := FermentationProcess.fbDriveReverse_012.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_012.sStatus        := FermentationProcess.fbDriveReverse_012.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_013 variable sets by PLC
MccRev_013.bTermFuse      := FermentationProcess.fbDriveReverse_013.MotorProtection;  // PLC input thermal fuse
MccRev_013.bContactor     := FermentationProcess.fbDriveReverse_013.MotorContactor;   // PLC output contactor
MccRev_013.udHours        := FermentationProcess.fbDriveReverse_013.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_013.uMinutes       := FermentationProcess.fbDriveReverse_013.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_013.uSeconds       := FermentationProcess.fbDriveReverse_013.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_013.sState         := FermentationProcess.fbDriveReverse_013.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_013.sStatus        := FermentationProcess.fbDriveReverse_013.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_014 variable sets by PLC
MccRev_014.bTermFuse      := FermentationProcess.fbDriveReverse_014.MotorProtection;  // PLC input thermal fuse
MccRev_014.bContactor     := FermentationProcess.fbDriveReverse_014.MotorContactor;   // PLC output contactor
MccRev_014.udHours        := FermentationProcess.fbDriveReverse_014.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_014.uMinutes       := FermentationProcess.fbDriveReverse_014.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_014.uSeconds       := FermentationProcess.fbDriveReverse_014.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_014.sState         := FermentationProcess.fbDriveReverse_014.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_014.sStatus        := FermentationProcess.fbDriveReverse_014.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register

//MccRev_015 variable sets by PLC
MccRev_015.bTermFuse      := FermentationProcess.fbDriveReverse_015.MotorProtection;  // PLC input thermal fuse
MccRev_015.bContactor     := FermentationProcess.fbDriveReverse_015.MotorContactor;   // PLC output contactor
MccRev_015.udHours        := FermentationProcess.fbDriveReverse_015.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_015.uMinutes       := FermentationProcess.fbDriveReverse_015.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_015.uSeconds       := FermentationProcess.fbDriveReverse_015.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_015.sState         := FermentationProcess.fbDriveReverse_015.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_015.sStatus        := FermentationProcess.fbDriveReverse_015.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_016 variable sets by PLC
MccRev_016.bTermFuse      := FermentationProcess.fbDriveReverse_016.MotorProtection;  // PLC input thermal fuse
MccRev_016.bContactor     := FermentationProcess.fbDriveReverse_016.MotorContactor;   // PLC output contactor
MccRev_016.udHours        := FermentationProcess.fbDriveReverse_016.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_016.uMinutes       := FermentationProcess.fbDriveReverse_016.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_016.uSeconds       := FermentationProcess.fbDriveReverse_016.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_016.sState         := FermentationProcess.fbDriveReverse_016.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_016.sStatus        := FermentationProcess.fbDriveReverse_016.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_017 variable sets by PLC
MccRev_017.bTermFuse      := FermentationProcess.fbDriveReverse_017.MotorProtection;  // PLC input thermal fuse
MccRev_017.bContactor     := FermentationProcess.fbDriveReverse_017.MotorContactor;   // PLC output contactor
MccRev_017.udHours        := FermentationProcess.fbDriveReverse_017.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_017.uMinutes       := FermentationProcess.fbDriveReverse_017.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_017.uSeconds       := FermentationProcess.fbDriveReverse_017.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_017.sState         := FermentationProcess.fbDriveReverse_017.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_017.sStatus        := FermentationProcess.fbDriveReverse_017.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_018 variable sets by PLC
MccRev_018.bTermFuse      := FermentationProcess.fbDriveReverse_018.MotorProtection;  // PLC input thermal fuse
MccRev_018.bContactor     := FermentationProcess.fbDriveReverse_018.MotorContactor;   // PLC output contactor
MccRev_018.udHours        := FermentationProcess.fbDriveReverse_018.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_018.uMinutes       := FermentationProcess.fbDriveReverse_018.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_018.uSeconds       := FermentationProcess.fbDriveReverse_018.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_018.sState         := FermentationProcess.fbDriveReverse_018.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_018.sStatus        := FermentationProcess.fbDriveReverse_018.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_019 variable sets by PLC
MccRev_019.bTermFuse      := FermentationProcess.fbDriveReverse_019.MotorProtection;  // PLC input thermal fuse
MccRev_019.bContactor     := FermentationProcess.fbDriveReverse_019.MotorContactor;   // PLC output contactor
MccRev_019.udHours        := FermentationProcess.fbDriveReverse_019.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_019.uMinutes       := FermentationProcess.fbDriveReverse_019.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_019.uSeconds       := FermentationProcess.fbDriveReverse_019.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_019.sState         := FermentationProcess.fbDriveReverse_019.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_019.sStatus        := FermentationProcess.fbDriveReverse_019.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register


//MccRev_020 variable sets by PLC
MccRev_020.bTermFuse      := FermentationProcess.fbDriveReverse_020.MotorProtection;  // PLC input thermal fuse
MccRev_020.bContactor     := FermentationProcess.fbDriveReverse_020.MotorContactor;   // PLC output contactor
MccRev_020.udHours        := FermentationProcess.fbDriveReverse_020.Hours;            // PLC Work Time Counter - hours nonvolatile memory register
MccRev_020.uMinutes       := FermentationProcess.fbDriveReverse_020.Minuts;           // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_020.uSeconds       := FermentationProcess.fbDriveReverse_020.Seconds;          // PLC Work Time Counter - seconds nonvolatile memory register
MccRev_020.sState         := FermentationProcess.fbDriveReverse_020.MotorState;       // PLC Work Time Counter - minutes nonvolatile memory register
MccRev_020.sStatus        := FermentationProcess.fbDriveReverse_020.MotorStatus;      // PLC Work Time Counter - seconds nonvolatile memory register




//Sygnały obiektu fbDrive Inverter MCC_02
//GVL.bForwardButton_M02 := MAIN.fbMotorControlInverter.ScadaForwardButton;  // SCADA button Forward Command
//GVL.bReverseButton_M02  := MAIN.fbMotorControlInverter.ScadaReverseButton; // SCADA button Reverse drive Command
//GVL.bAutoButton_M02 := MAIN.fbMotorControlInverter.ScadaAutoButton;        // SCADA button Auto/manual Command
//GVL.bResetButton_M02 := MAIN.fbMotorControlInverter.ScadaResetButton;	   // SCADA button Reset drive Command 
//GVL.rSpeedEdit_M02 := MAIN.fbMotorControlInverter.ScadaSpeedEdit;		   // SCADA textEdit speed edit box
//GVL.bAuto_M02 := MAIN.fbDriveInverter1.MotorAuto;						   // PLC program execution control	
//GVL.bTermFuse_M02 := Main.fbDriveInverter1.MotorProtection;				   // PLC program execution control
//GVL.udHours_M02 := MAIN.fbDriveInverter1.Hours;							   // PLC Work Time Hours		
//GVL.uMinuts_M02 := MAIN.fbDriveInverter1.Minuts;						   // PLC Work Time Minuts
//GVL.uSeconds_M02 := MAIN.fbDriveInverter1.Seconds;						   // PLC Work Time Seconds	
//GVL.sStatus_M02 := main.fbDriveInverter1.MotorStatus;					   // PLC Motor Drive status	
//GVL.sState_M02 := Main.fbDriveInverter1.MotorState;						   // PLC Motor Drive state	


]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>