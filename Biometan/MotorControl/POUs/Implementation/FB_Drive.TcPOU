<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Drive" Id="{112ce01f-73d6-45c3-b7fa-a81578b83871}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Drive IMPLEMENTS I_Drive
VAR
	_contactor		: Contactor;	// załącz/wyłącz stycznik silnika
	_autoLed 		: Led;	// zaświeć/zgaś Led auto w stacyjce napędu SCADA
	_supplyLed		: Led;	// zaświeć/zgaś Led supply w stacyjce napędu SCADA
	_stateLabel		: Label; // label do wyświetlania stanu urzadzenia w stacyjce SCADA
	_workTimeLabel	: Label; // label do wyświetlania czasu pracy napędu w stacyjce SCADA
	_statusLabel	: Label; // label to wyświetlania statusu napędu w stacyjce SCADA
	_termFuse		: TermFuse; // wejście zabezpieczenia termicznego i nadprądowego napędu
	_text			: T_MaxString;

	_startCount  	: BOOL;		// start/stop zliczania czasu
	_stWorkTime  	: ST_WorkTime;	// struktura czasu pracy napędu

	_eStateMachine	: E_StateDevice :=eOff; //Drive State Machine ustaw stan początkowy
	_eCommand		: E_Command;     // Command
  
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
]]></ST>
    </Implementation>
    <Folder Name="Property" Id="{c7b71121-1c3a-4233-8eae-34af406c9779}" />
    <Property Name="Auto" Id="{216d8a9c-1493-4338-9c24-1d475d17adbf}" FolderPath="Property\">
      <Declaration><![CDATA[PROPERTY Auto : BOOL]]></Declaration>
      <Get Name="Get" Id="{26cff0e9-30d4-430d-ba36-40b646b260a2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Auto := _autoLed;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{b2bb48fa-6fac-4a91-afeb-f69383ab9f17}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_autoLed := Auto;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="AutoLedOff" Id="{e07e0a99-b516-4100-ba57-7091f166c26d}">
      <Declaration><![CDATA[METHOD AutoLedOff : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^._autoLed.State := FALSE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="AutoLedOn" Id="{f40adada-292d-42d1-bfea-7b992f66db54}">
      <Declaration><![CDATA[METHOD AutoLedOn : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^._autoLed.State := TRUE;

]]></ST>
      </Implementation>
    </Method>
    <Property Name="Contactor" Id="{c4450694-6377-44b1-9b63-deebdda0956c}" FolderPath="Property\">
      <Declaration><![CDATA[PROPERTY Contactor : BOOL]]></Declaration>
      <Get Name="Get" Id="{50892fe0-ade1-404a-ab21-03d926735e20}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{4c8b7b13-2fd1-4940-9e34-f3610670644e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="StatusState" Id="{cd1cb900-b022-4cc7-bc91-7a31f5c8791b}">
      <Declaration><![CDATA[METHOD StatusState : E_StateDevice
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Machine of the Drive 
// zliczaj czas pracy gdy napęd jest uruchomiony


CASE _eStateMachine OF
	
	eOff:
		WorkCounterOff();
		_supplyLed.State := FALSE;
		_stateLabel.Text := 'OFF';
		_statusLabel.Text := 'Napęd jest wyłączony';
		_contactor.State := FALSE;
		
		IF (_eCommand = eReady) AND _termFuse.IsActive THEN
			_eStateMachine := eOn;	
		END_IF
	
	eOn:
		WorkCounterOff();
		_supplyLed.State := TRUE;
		_stateLabel.Text := 'ON';
		_statusLabel.Text := 'Napęd jest w gotowości';
		_contactor.State := FALSE;

		IF _eCommand = eFwd THEN
			_eStateMachine := eForward;
		ELSIF _eCommand = eReady AND NOT _termFuse.IsActive THEN
			_eStateMachine := eOff;
		ELSIF _eCommand = eReady AND _termFuse.IsActive THEN
			_eStateMachine := eOn;	
		END_IF
		
	
	eForward:
		_stateLabel.Text := 'RUNNING';
		_statusLabel.Text := 'Napęd jest uruchomiony do przodu';	
		WorkCounterOn();
		WorkCount();
		WorkTimelabel();	
		IF _eCommand = eFwd THEN
			_contactor.State := TRUE;
		ELSIF _eCommand = eReady THEN
			_eStateMachine := eOn;
		END_IF
		
        IF _eCommand = eFwd AND NOT _termFuse.IsActive THEN
			_eStateMachine := eFault;
		END_IF
		
	
	eFault:
		_contactor.State := FALSE;
		WorkCounterOff();
		_stateLabel.Text := 'FAULT';
		_statusLabel.Text := 'Zadziałał wyłacznik silnikowy';
		IF _eCommand = eReady AND NOT _termFuse.IsActive THEN
			_eStateMachine := eOff;
		END_IF

END_CASE





//IF _termFuse.IsActive THEN
//		_supplyLed.State := TRUE;
//		_stateLabel.Text := 'ON';
//		_statusLabel.Text := 'Napęd jest w gotowości';
//		StatusState := eOn;
		
//	IF _contactor.State THEN
//		_stateLabel.Text := 'RUNNING';
//		_statusLabel.Text := 'Napęd jest uruchomiony do przodu';
		
//		// start count work time
//		WorkTimelabel();
//		StatusState := eForward;
		
		
//	END_IF

//ELSE
//		_supplyLed.State := FALSE;
//		_stateLabel.Text := 'OFF';
//		_statusLabel.Text := 'Napęd jest wyłączony';
//		StatusState := eOff;

//	IF _contactor.State THEN
//		_stateLabel.Text := 'FAULT';
//		_statusLabel.Text := 'Zadziałał wyłacznik silnikowy';
//		StatusState := eFault;
//	END_IF

//END_IF

]]></ST>
      </Implementation>
    </Method>
    <Property Name="Supply" Id="{f667981d-706f-4708-99c7-9dc298d3783a}" FolderPath="Property\">
      <Declaration><![CDATA[PROPERTY Supply : BOOL]]></Declaration>
      <Get Name="Get" Id="{a650e293-77db-4e65-b9e5-e7ef0bbbec2b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Supply := _supplyLed;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="SwitchOff" Id="{b726e6e2-693a-4b15-abd3-37eeaf4d83de}">
      <Declaration><![CDATA[METHOD SwitchOff : BOOL
VAR_INPUT
	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^._eCommand := eReady;




	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SwitchOn" Id="{047ffa8d-ba7e-4fee-8c3d-aa923ffb5d52}">
      <Declaration><![CDATA[METHOD SwitchOn : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^._eCommand := eFwd;









]]></ST>
      </Implementation>
    </Method>
    <Property Name="TermFuse" Id="{5f769aa7-9a8f-4b7d-94a2-8efc080d6f75}" FolderPath="Property\">
      <Declaration><![CDATA[PROPERTY TermFuse : BOOL]]></Declaration>
      <Get Name="Get" Id="{a0af65ea-6e3e-4dad-a86e-8bf01cc75136}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TermFuse := _termFuse;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="WorkCount" Id="{72be380d-7f66-4d86-a0eb-efd62cefdaad}">
      <Declaration><![CDATA[METHOD PUBLIC WorkCount : STRING
VAR_INPUT
END_VAR

VAR_INST
	fbTon	: TON;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbTon(IN := _startCount, PT := T#1S);

IF (fbTon.Q) THEN
	
	fbTon(IN:=FALSE);
	_stWorkTime.seconds := _stWorkTime.seconds +1;
	
	IF _stWorkTime.seconds > 59 THEN
		_stWorkTime.seconds := 0;
		_stWorkTime.minuts := _stWorkTime.minuts +1;
		IF _stWorkTime.minuts > 59 THEN
			_stWorkTime.minuts := 0;
			_stWorkTime.hours := _stWorkTime.hours +1;	
		END_IF
	END_IF
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="WorkCounterOff" Id="{a9042c87-8ee2-440b-9f6f-bdcc6b653229}">
      <Declaration><![CDATA[METHOD WorkCounterOff : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^._startCount := FALSE;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="WorkCounterOn" Id="{8d8a6122-3d0d-4d9c-a060-fcf02b0c3cc0}">
      <Declaration><![CDATA[METHOD WorkCounterOn : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^._startCount := TRUE;



]]></ST>
      </Implementation>
    </Method>
    <Method Name="WorkTimeLabel" Id="{3c2a35eb-17e7-4a61-9a22-d11136ab8f6c}">
      <Declaration><![CDATA[METHOD PROTECTED WorkTimeLabel : STRING
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Forms a chain of the form 'Hours:Minuts:Seconds'
_text := CONCAT(UDINT_TO_STRING(THIS^._stWorkTime.hours), ':');
_text := CONCAT(_text, UDINT_TO_STRING(THIS^._stWorkTime.minuts));
_text := CONCAT(_text, ':');
_text := CONCAT(_text, UDINT_TO_STRING(_stWorkTime.seconds));

_workTimeLabel.Text := _text;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>