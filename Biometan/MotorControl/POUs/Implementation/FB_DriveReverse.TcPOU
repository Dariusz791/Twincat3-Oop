<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_DriveReverse" Id="{e7f5413c-681f-401c-af50-970535df7710}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_DriveReverse EXTENDS FB_Drive IMPLEMENTS I_DriveReverse

VAR
	_contactorReverse		: ContactorReverse;	// załącz/wyłącz stycznik do tyłu silnika
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();
]]></ST>
    </Implementation>
    <Method Name="SwitchReverseOff" Id="{1bf8401f-e92a-45bf-8d9b-1f25e75c2802}">
      <Declaration><![CDATA[METHOD SwitchReverseOff : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_contactorReverse.State := False;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SwitchReverseOn" Id="{d0c55b9b-ce07-4e2d-8242-0831ea7d7140}">
      <Declaration><![CDATA[METHOD SwitchReverseOn : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_contactorReverse.State := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="TaurusState" Id="{9134f4c8-a297-452b-a6ad-a83f0aad6a9c}">
      <Declaration><![CDATA[METHOD TaurusState : STRING
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// ustaw stan zmiennej LED Taurusa w TANGO SCADA (zmiana koloru diody predefiniowana tekstem) oraz label statusu jako tekst
// zliczaj czas pracy gdy napęd jest uruchomiony


IF _termFuse.IsActive THEN
		_supplyLed.State := TRUE;
		_taurusLed.Text := 'ON';
		_statusLabel.Text := 'ON';	

	IF _contactor.State OR _contactorReverse.State THEN
		_taurusLed.Text := 'RUNNING';
		_statusLabel.Text := 'RUNNING';
		
		// start count work time
		WorkTimelabel();
	END_IF

ELSE
		_supplyLed.State := FALSE;
		_taurusLed.Text := 'OFF';
		_statusLabel.Text := 'OFF';

	IF _contactor.State OR _contactorReverse.State THEN
		_taurusLed.Text := 'FAULT';
		_statusLabel.Text := 'FAULT';
	END_IF

END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>